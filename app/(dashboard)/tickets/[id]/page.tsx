import { Suspense } from 'react';
import { createClient } from 'utils/supabase/server';
import { getTicket } from './helper/helper';

import ContentHeader from '@components/content/ContentHeader';
import Loading from '@/(dashboard)/loading';
import Ticket from '@/(dashboard)/components/content/Ticket/Ticket';

export const dynamicParams = true;

export async function generateMetadata({ params }) {
  const supabase = createClient();
  const { data: ticket, error } = await supabase
    .from('Tickets')
    .select()
    .eq('id', params.id)
    .single();

  return {
    title: `Helpdesk | ${ticket?.title || 'Ticket not found'}`,
    description: 'Generated by create next app',
  };
}

interface TicketDetailsProps {
  params: {
    id: string;
  }
}

const TicketDetails = async ({ params }: TicketDetailsProps) => {
  const ticket = await getTicket(params.id);

  const supabase = createClient();
  const { data } = await supabase.auth.getSession();

  if (!ticket) {
    return <h2 className="text-center">Ticket was not found</h2>;
  }

  return (
    <>
      <header>
        <ContentHeader headerTitle="Ticket Details" href="/tickets" nextPage="Ticket List" />
      </header>
      <article>
        <Suspense fallback={<Loading />}>
          <Ticket ticket={ticket} sessionEmail={data.session.user.email} displayDescription displayMenu />
        </Suspense>
      </article>
    </>
  );
};

export default TicketDetails;
